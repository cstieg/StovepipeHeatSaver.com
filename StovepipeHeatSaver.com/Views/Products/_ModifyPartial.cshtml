@Scripts.Render("~/bundles/nicedit")
<script type="text/javascript">bkLib.onDomLoaded(nicEditors.allTextAreas);</script>


@model StovepipeHeatSaver.Models.Product

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (ViewBag.Title == "Edit")
        {
            @Html.HiddenFor(model => model.Id)
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Shipping, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Shipping, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Shipping, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShippingSchemeId, "ShippingSchemeId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ShippingSchemeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ShippingSchemeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Diameter, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Diameter, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Diameter, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductInfo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ProductInfo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductInfo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WebImages, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 container">
                <div id="product-images" class="row">
                    @if (ViewBag.Title == "Edit")
                    {
                        if (Model.WebImages != null)
                        {
                            foreach (var webImage in Model.WebImages)
                            {
                                @Html.Partial("_ProductImagePartial", webImage)
                            }
                        }
                    }

                </div>
                <div class="clearfix"></div>
                <hr />
                <div class="form-horizontal">
                    <label for="imageFile" class="btn btn-default">Choose image file to add</label>
                    @{ 
                        int? ModelId = null;
                        if (Model != null)
                        {
                            ModelId = Model.Id;
                        }
                    }
                    <input id="imageFile" type="file" accept=".jpg, .jpeg, .png, .gif" multiple name="imageFile" class="hidden" 
                               onchange="ImageUpload.uploadImages('/Edit/Products/AddImage/@ModelId', '#product-images')" />
                </div>
                <div id="upload-instructions" class="col-md-12">
                    <p>
                        Please keep in mind the following guidelines:
                    </p>
                    <ul>
                        <li>Optimally, filenames should be descriptive -- 12gaugeto20gauge.jpg</li>
                        <li>Files will be automatically resized down as necessary; file sizes of 1MB to 5MB are optimal.</li>
                    </ul>
                </div>
            </div>
        </div>




        <div class="form-group">
            @Html.LabelFor(model => model.DisplayOnFrontPage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.DisplayOnFrontPage)
                    @Html.ValidationMessageFor(model => model.DisplayOnFrontPage, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DoNotDisplay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.DoNotDisplay)
                    @Html.ValidationMessageFor(model => model.DoNotDisplay, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

